{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 352,
  "lineage": "c348dc62-953f-1996-c7dd-2fe94d86c84c",
  "outputs": {
    "consumer-jdbc-url": {
      "value": "jdbc:postgresql://consumer-postgres-service:5432/consumer",
      "type": "string"
    },
    "provider-jdbc-url": {
      "value": {
        "catalog-server": "jdbc:postgresql://provider-postgres-service:5432/catalog_server",
        "provider-manufacturing": "jdbc:postgresql://provider-postgres-service:5432/provider_manufacturing",
        "provider-qna": "jdbc:postgresql://provider-postgres-service:5432/provider_qna"
      },
      "type": [
        "object",
        {
          "catalog-server": "string",
          "provider-manufacturing": "string",
          "provider-qna": "string"
        }
      ]
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "nginx-map",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "did.json": "{\"service\":[],\"verificationMethod\":[{\"id\":\"did:web:dataspace-issuer#key-1\",\"type\":\"JsonWebKey2020\",\"controller\":\"did:web:dataspace-issuer\",\"publicKeyMultibase\":null,\"publicKeyJwk\":{\"kty\":\"OKP\",\"crv\":\"Ed25519\",\"x\":\"Hsq2QXPbbsU7j6JwXstbpxGSgliI04g_fU3z2nwkuVc\"}}],\"authentication\":[\"key-1\"],\"id\":\"did:web:dataspace-issuer\",\"@context\":[\"https://www.w3.org/ns/did/v1\",{\"@base\":\"did:web:dataspace-issuer\"}]}",
              "nginx.conf": "events { worker_connections 1024; }\n\nhttp {\n  server {\n      listen 80;\n      root /var/www/;\n      index index.html;\n    }\n  }"
            },
            "id": "mvd/nginx-conf",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "nginx-conf",
                "namespace": "mvd",
                "resource_version": "575",
                "uid": "6ae0dffe-43df-49d4-9e18-4942030f7d0c"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "postgres-initdb-config-consumer",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "consumer-initdb-config.sql": "CREATE USER consumer WITH ENCRYPTED PASSWORD 'consumer' SUPERUSER;\nCREATE DATABASE consumer;\n\\c consumer consumer\n\n\n"
            },
            "id": "mvd/consumer-initdb-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-initdb-config",
                "namespace": "mvd",
                "resource_version": "579",
                "uid": "2923fc28-21dc-4d8e-9e13-ccdd2689dd85"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "postgres-initdb-config-cs",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "cs-initdb-config.sql": "CREATE USER catalog_server WITH ENCRYPTED PASSWORD 'catalog_server' SUPERUSER;\nCREATE DATABASE catalog_server;\n\\c catalog_server\n\n"
            },
            "id": "mvd/cs-initdb-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cs-initdb-config",
                "namespace": "mvd",
                "resource_version": "580",
                "uid": "327adba1-e632-4850-8bfc-c9dd0c432f5c"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "postgres-initdb-config-ih",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "ih-initdb-config.sql": "CREATE USER identity WITH ENCRYPTED PASSWORD 'identity' SUPERUSER;\nCREATE DATABASE identity;\n\\c identity\n"
            },
            "id": "mvd/ih-initdb-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ih-initdb-config",
                "namespace": "mvd",
                "resource_version": "576",
                "uid": "93d21ff7-0f72-474b-b15d-66fa5b12c193"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "postgres-initdb-config-pm",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "provider-manufacturing-initdb-config.sql": "CREATE USER manufacturing WITH ENCRYPTED PASSWORD 'provider-manufacturing' SUPERUSER;\nCREATE DATABASE provider_manufacturing;\n\\c provider_manufacturing\n\n"
            },
            "id": "mvd/provider-manufacturing-initdb-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-manufacturing-initdb-config",
                "namespace": "mvd",
                "resource_version": "577",
                "uid": "15d82d3c-323d-4a42-a515-12754fb28565"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "postgres-initdb-config-pqna",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "provider-qna-initdb-config.sql": "CREATE USER qna WITH ENCRYPTED PASSWORD 'provider-qna' SUPERUSER;\nCREATE DATABASE provider_qna;\n\\c provider_qna\n\n"
            },
            "id": "mvd/provider-qna-initdb-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-qna-initdb-config",
                "namespace": "mvd",
                "resource_version": "578",
                "uid": "9482eccb-8b80-4d27-b877-cd9a48ad3721"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "dataspace-issuer-did-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/dataspace-issuer-server",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "dataspace-issuer-server"
                },
                "name": "dataspace-issuer-server",
                "namespace": "mvd",
                "resource_version": "650",
                "uid": "4cf2b25d-f45d-4b32-a1ce-c5f06b474f55"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "dataspace-issuer-server"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "dataspace-issuer-server"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "nginx:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "nginx",
                            "port": [
                              {
                                "container_port": 80,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "web",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/nginx/nginx.conf",
                                "mount_propagation": "None",
                                "name": "nginx-config",
                                "read_only": false,
                                "sub_path": "nginx.conf"
                              },
                              {
                                "mount_path": "/var/www/.well-known/did.json",
                                "mount_propagation": "None",
                                "name": "nginx-config",
                                "read_only": false,
                                "sub_path": "did.json"
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "nginx-conf",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "nginx-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ns",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mvd",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "mvd",
                "resource_version": "543",
                "uid": "120fded2-e7fa-4f81-8d44-63c31be32cac"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "dataspace-issuer-did-server-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/dataspace-issuer",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "dataspace-issuer",
                "namespace": "mvd",
                "resource_version": "660",
                "uid": "e005c69e-4ddd-4d02-aef6-801d283bfa94"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.97.35.3",
                "cluster_ips": [
                  "10.97.35.3"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 31966,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "80"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "dataspace-issuer-server"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_deployment.dataspace-issuer-did-server",
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-connector",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "connector-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_API_AUTH_KEY": "password",
              "EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS": "10",
              "EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS": "10",
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "consumer",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://consumer-postgres-service:5432/consumer",
              "EDC_DATASOURCE_DEFAULT_USER": "consumer",
              "EDC_DSP_CALLBACK_ADDRESS": "http://consumer-controlplane:8082/api/dsp",
              "EDC_IAM_DID_WEB_USE_HTTPS": "false",
              "EDC_IAM_ISSUER_ID": "did:web:consumer-identityhub%3A7083:consumer",
              "EDC_IAM_STS_OAUTH_CLIENT_ID": "did:web:consumer-identityhub%3A7083:consumer",
              "EDC_IAM_STS_OAUTH_CLIENT_SECRET_ALIAS": "did:web:consumer-identityhub%3A7083:consumer-sts-client-secret",
              "EDC_IAM_STS_OAUTH_TOKEN_URL": "http://consumer-sts-service:8082/api/sts/token",
              "EDC_IAM_STS_PRIVATEKEY_ALIAS": "did:web:consumer-identityhub%3A7083:consumer#key-1",
              "EDC_IAM_STS_PUBLICKEY_ID": "did:web:consumer-identityhub%3A7083:consumer#key-1",
              "EDC_IH_AUDIENCE_REGISTRY_PATH": "/etc/registry/registry.json",
              "EDC_MVD_PARTICIPANTS_LIST_FILE": "/etc/participants/participants.json",
              "EDC_PARTICIPANT_ID": "did:web:consumer-identityhub%3A7083:consumer",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://consumer-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044",
              "WEB_HTTP_CATALOG_AUTH_KEY": "password",
              "WEB_HTTP_CATALOG_AUTH_TYPE": "tokenbased",
              "WEB_HTTP_CATALOG_PATH": "/api/catalog",
              "WEB_HTTP_CATALOG_PORT": "8084",
              "WEB_HTTP_CONTROL_PATH": "/api/control",
              "WEB_HTTP_CONTROL_PORT": "8083",
              "WEB_HTTP_MANAGEMENT_PATH": "/api/management",
              "WEB_HTTP_MANAGEMENT_PORT": "8081",
              "WEB_HTTP_PATH": "/api",
              "WEB_HTTP_PORT": "8080",
              "WEB_HTTP_PROTOCOL_PATH": "/api/dsp",
              "WEB_HTTP_PROTOCOL_PORT": "8082"
            },
            "id": "mvd/consumer-controlplane-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-controlplane-config",
                "namespace": "mvd",
                "resource_version": "865",
                "uid": "e46f9ef4-5306-461e-b58a-be93a9934835"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-connector",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "dataplane-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "consumer",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://consumer-postgres-service:5432/consumer",
              "EDC_DATASOURCE_DEFAULT_USER": "consumer",
              "EDC_DPF_SELECTOR_URL": "http://consumer-controlplane:8083/api/control/v1/dataplanes",
              "EDC_HOSTNAME": "consumer-dataplane",
              "EDC_IAM_STS_OAUTH_CLIENT_ID": "did:web:consumer-identityhub%3A7083:consumer",
              "EDC_IAM_STS_OAUTH_CLIENT_SECRET_ALIAS": "consumer-participant-sts-client-secret",
              "EDC_IAM_STS_OAUTH_TOKEN_URL": "http://consumer-sts-service:8082/api/sts/token",
              "EDC_PARTICIPANT_ID": "did:web:consumer-identityhub%3A7083:consumer",
              "EDC_RUNTIME_ID": "consumer-dataplane",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS": "did:web:consumer-identityhub%3A7083:consumer#key-1",
              "EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS": "did:web:consumer-identityhub%3A7083:consumer#key-1",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://consumer-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044",
              "WEB_HTTP_CONTROL_PATH": "/api/control",
              "WEB_HTTP_CONTROL_PORT": "8083",
              "WEB_HTTP_PATH": "/api",
              "WEB_HTTP_PORT": "8080",
              "WEB_HTTP_PUBLIC_PATH": "/api/public",
              "WEB_HTTP_PUBLIC_PORT": "11002"
            },
            "id": "mvd/consumer-dataplane-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-dataplane-config",
                "namespace": "mvd",
                "resource_version": "864",
                "uid": "4bb2bbc9-5952-4800-804e-da2336596f37"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-connector",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "participants-map",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "participants.json": "{\n  \"consumer-corp\": \"did:web:consumer-identityhub%3A7083:consumer\",\n  \"provider-corp\": \"did:web:provider-identityhub%3A7083:provider\"\n}"
            },
            "id": "mvd/consumer-participants",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-participants",
                "namespace": "mvd",
                "resource_version": "582",
                "uid": "f7ee615e-cf6c-47f1-894a-adadc7170317"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-connector",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "controlplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-controlplane",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "consumer-controlplane"
                },
                "name": "consumer-controlplane",
                "namespace": "mvd",
                "resource_version": "1075",
                "uid": "48ce85d9-1507-478c-b0ad-6c11cdb73178"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "consumer-controlplane"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "consumer-controlplane"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "consumer-controlplane-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/controlplane:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/liveness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "connector-consumer",
                            "port": [
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "management-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "default-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 1044,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "debug-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/readiness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/startup",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/registry",
                                "mount_propagation": "None",
                                "name": "registry-volume",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/etc/participants",
                                "mount_propagation": "None",
                                "name": "participants-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "consumer-controlplane-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "registry-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "consumer-participants",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "participants-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-connector.kubernetes_config_map.connector-config",
            "module.consumer-connector.kubernetes_config_map.participants-map",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-connector",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "dataplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-dataplane",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "consumer-dataplane"
                },
                "name": "consumer-dataplane",
                "namespace": "mvd",
                "resource_version": "1595",
                "uid": "87b199c2-560b-4c3e-a497-3d388977ac60"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "consumer-dataplane"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "consumer-dataplane"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "consumer-dataplane-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/dataplane:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/liveness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "dataplane-consumer",
                            "port": [
                              {
                                "container_port": 11002,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "public-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 1044,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "debug-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/readiness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/startup",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-connector.kubernetes_config_map.connector-config",
            "module.consumer-connector.kubernetes_config_map.dataplane-config",
            "module.consumer-connector.kubernetes_config_map.participants-map",
            "module.consumer-connector.kubernetes_deployment.controlplane",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-connector",
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "api-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mvd/consumer-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/rewrite-target": "/$2",
                  "nginx.ingress.kubernetes.io/use-regex": "true"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "consumer-ingress",
                "namespace": "mvd",
                "resource_version": "1643",
                "uid": "9bcac67b-dac9-4aa3-aa96-d20b62530e02"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "consumer-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8080
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/consumer/health(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "consumer-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8081
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/consumer/cp(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "consumer-dataplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 11002
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/consumer/public(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "consumer-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8084
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/consumer/fc(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "consumer-vault",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8200
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/consumer/vault(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "192.168.49.2"
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-connector.kubernetes_config_map.connector-config",
            "module.consumer-connector.kubernetes_config_map.dataplane-config",
            "module.consumer-connector.kubernetes_config_map.participants-map",
            "module.consumer-connector.kubernetes_deployment.controlplane",
            "module.consumer-connector.kubernetes_deployment.dataplane",
            "module.consumer-connector.kubernetes_service.controlplane-service",
            "module.consumer-connector.kubernetes_service.dataplane-service",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-connector",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "controlplane-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-controlplane",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-controlplane",
                "namespace": "mvd",
                "resource_version": "1101",
                "uid": "174cdde2-e9d6-45ad-a5e6-ade0670dc2d6"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.106.40.17",
                "cluster_ips": [
                  "10.106.40.17"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "health",
                    "node_port": 31527,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  },
                  {
                    "app_protocol": "",
                    "name": "management",
                    "node_port": 30898,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "8081"
                  },
                  {
                    "app_protocol": "",
                    "name": "catalog",
                    "node_port": 30625,
                    "port": 8084,
                    "protocol": "TCP",
                    "target_port": "8084"
                  },
                  {
                    "app_protocol": "",
                    "name": "protocol",
                    "node_port": 31461,
                    "port": 8082,
                    "protocol": "TCP",
                    "target_port": "8082"
                  },
                  {
                    "app_protocol": "",
                    "name": "debug",
                    "node_port": 30840,
                    "port": 1044,
                    "protocol": "TCP",
                    "target_port": "1044"
                  },
                  {
                    "app_protocol": "",
                    "name": "control",
                    "node_port": 32113,
                    "port": 8083,
                    "protocol": "TCP",
                    "target_port": "8083"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "consumer-controlplane"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-connector.kubernetes_config_map.connector-config",
            "module.consumer-connector.kubernetes_config_map.participants-map",
            "module.consumer-connector.kubernetes_deployment.controlplane",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-connector",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "dataplane-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-dataplane",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-dataplane",
                "namespace": "mvd",
                "resource_version": "1600",
                "uid": "e230fc6b-c3b2-45df-a0de-6c540c8f05d1"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.107.11.167",
                "cluster_ips": [
                  "10.107.11.167"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "control",
                    "node_port": 30419,
                    "port": 8083,
                    "protocol": "TCP",
                    "target_port": "8083"
                  },
                  {
                    "app_protocol": "",
                    "name": "public",
                    "node_port": 30686,
                    "port": 11002,
                    "protocol": "TCP",
                    "target_port": "11002"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "consumer-dataplane"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-connector.kubernetes_config_map.connector-config",
            "module.consumer-connector.kubernetes_config_map.dataplane-config",
            "module.consumer-connector.kubernetes_config_map.participants-map",
            "module.consumer-connector.kubernetes_deployment.controlplane",
            "module.consumer-connector.kubernetes_deployment.dataplane",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-identityhub",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "identityhub-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_API_AUTH_KEY": "password",
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "consumer",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://consumer-postgres-service:5432/consumer",
              "EDC_DATASOURCE_DEFAULT_USER": "consumer",
              "EDC_IAM_ACCESSTOKEN_JTI_VALIDATION": "true",
              "EDC_IAM_DID_WEB_USE_HTTPS": "false",
              "EDC_IAM_STS_PRIVATEKEY_ALIAS": "key-1",
              "EDC_IAM_STS_PUBLICKEY_ID": "key-1",
              "EDC_IH_API_SUPERUSER_KEY": "c3VwZXItdXNlcg==.c3VwZXItc2VjcmV0LWtleQo=",
              "EDC_IH_IAM_ID": "did:web:consumer-identityhub%3A7083:consumer",
              "EDC_IH_IAM_PUBLICKEY_ALIAS": "consumer-identityhub-publickey",
              "EDC_MVD_CREDENTIALS_PATH": "/etc/credentials/",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_STS_ACCOUNTS_API_AUTH_HEADER_VALUE": "password",
              "EDC_STS_ACCOUNT_API_URL": "http://consumer-sts-service:8081/api",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://consumer-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044",
              "WEB_HTTP_DID_PATH": "/",
              "WEB_HTTP_DID_PORT": "7083",
              "WEB_HTTP_IDENTITY_PATH": "/api/identity",
              "WEB_HTTP_IDENTITY_PORT": "7081",
              "WEB_HTTP_PATH": "/api",
              "WEB_HTTP_PORT": "7080",
              "WEB_HTTP_PRESENTATION_PATH": "/api/presentation",
              "WEB_HTTP_PRESENTATION_PORT": "7082",
              "WEB_HTTP_STS_PATH": "/api/sts",
              "WEB_HTTP_STS_PORT": "7084"
            },
            "id": "mvd/consumer-identityhub-ih-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-identityhub-ih-config",
                "namespace": "mvd",
                "resource_version": "866",
                "uid": "9f21eefa-01b1-4a8b-a7c5-0a9299fa1b18"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-identityhub",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "identityhub-credentials-map",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "dataprocessor-credential.json": "{\n  \"id\": \"40e24588-b510-41ca-966c-c1e0f57d1b15\",\n  \"participantId\": \"did:web:consumer-identityhub%3A7083:consumer\",\n  \"timestamp\": 1700659822500,\n  \"issuerId\": \"did:web:dataspace-issuer\",\n  \"holderId\": \"did:web:consumer-identityhub%3A7083:consumer\",\n  \"state\": 500,\n  \"issuancePolicy\": null,\n  \"reissuancePolicy\": null,\n  \"verifiableCredential\": {\n    \"format\": \"JWT\",\n    \"rawVc\": \"eyJraWQiOiJkaWQ6d2ViOmRhdGFzcGFjZS1pc3N1ZXIja2V5LTEiLCJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJpc3MiOiJkaWQ6d2ViOmRhdGFzcGFjZS1pc3N1ZXIiLCJhdWQiOiJkaWQ6d2ViOmNvbnN1bWVyLWlkZW50aXR5aHViJTNBNzA4MzphbGljZSIsInN1YiI6ImRpZDp3ZWI6Y29uc3VtZXItaWRlbnRpdHlodWIlM0E3MDgzOmFsaWNlIiwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJodHRwczovL3czaWQub3JnL3NlY3VyaXR5L3N1aXRlcy9qd3MtMjAyMC92MSIsImh0dHBzOi8vd3d3LnczLm9yZy9ucy9kaWQvdjEiLHsibXZkLWNyZWRlbnRpYWxzIjoiaHR0cHM6Ly93M2lkLm9yZy9tdmQvY3JlZGVudGlhbHMvIiwiY29udHJhY3RWZXJzaW9uIjoibXZkLWNyZWRlbnRpYWxzOmNvbnRyYWN0VmVyc2lvbiIsImxldmVsIjoibXZkLWNyZWRlbnRpYWxzOmxldmVsIn1dLCJpZCI6Imh0dHA6Ly9vcmcueW91cmRhdGFzcGFjZS5jb20vY3JlZGVudGlhbHMvMjM0NyIsInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJodHRwOi8vb3JnLnlvdXJkYXRhc3BhY2UuY29tI0RhdGFQcm9jZXNzb3JDcmVkZW50aWFsIl0sImlzc3VlciI6ImRpZDp3ZWI6ZGF0YXNwYWNlLWlzc3VlciIsImlzc3VhbmNlRGF0ZSI6IjIwMjMtMDgtMThUMDA6MDA6MDBaIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6d2ViOmNvbnN1bWVyLWlkZW50aXR5aHViJTNBNzA4Mzpjb25zdW1lciIsImNvbnRyYWN0VmVyc2lvbiI6IjEuMC4wIiwibGV2ZWwiOiJwcm9jZXNzaW5nIn19LCJpYXQiOjE3MzYzMjkxMDh9._R-nZzwGX2VLgj4RXmf7-MGTC51x75f4E0TwV3RvOgyFtB1zktnNQJZSkv1m4Q4MWcvI7bB0VJPtEv-WBiUNDA\",\n    \"credential\": {\n      \"credentialSubject\": [\n        {\n          \"claims\": {\n            \"id\": \"did:web:consumer-identityhub%3A7083:consumer\",\n            \"contractVersion\": \"1.0.0\",\n            \"level\": \"processing\"\n          }\n        }\n      ],\n      \"id\": \"http://org.yourdataspace.com/credentials/1235\",\n      \"type\": [\n        \"VerifiableCredential\",\n        \"DataProcessorCredential\"\n      ],\n      \"issuer\": {\n        \"id\": \"did:web:dataspace-issuer\",\n        \"additionalProperties\": {}\n      },\n      \"issuanceDate\": 1702339200.000000000,\n      \"expirationDate\": null,\n      \"credentialStatus\": null,\n      \"description\": null,\n      \"name\": null\n    }\n  }\n}\n",
              "membership-credential.json": "{\n  \"id\": \"40e24588-b510-41ca-966c-c1e0f57d1b14\",\n  \"participantId\": \"did:web:consumer-identityhub%3A7083:consumer\",\n  \"timestamp\": 1700659822500,\n  \"issuerId\": \"did:web:dataspace-issuer\",\n  \"holderId\": \"did:web:consumer-identityhub%3A7083:consumer\",\n  \"state\": 500,\n  \"issuancePolicy\": null,\n  \"reissuancePolicy\": null,\n  \"verifiableCredential\": {\n    \"rawVc\": \"eyJraWQiOiJkaWQ6d2ViOmRhdGFzcGFjZS1pc3N1ZXIja2V5LTEiLCJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJpc3MiOiJkaWQ6d2ViOmRhdGFzcGFjZS1pc3N1ZXIiLCJhdWQiOiJkaWQ6d2ViOmNvbnN1bWVyLWlkZW50aXR5aHViJTNBNzA4MzphbGljZSIsInN1YiI6ImRpZDp3ZWI6Y29uc3VtZXItaWRlbnRpdHlodWIlM0E3MDgzOmFsaWNlIiwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJodHRwczovL3czaWQub3JnL3NlY3VyaXR5L3N1aXRlcy9qd3MtMjAyMC92MSIsImh0dHBzOi8vd3d3LnczLm9yZy9ucy9kaWQvdjEiLHsibXZkLWNyZWRlbnRpYWxzIjoiaHR0cHM6Ly93M2lkLm9yZy9tdmQvY3JlZGVudGlhbHMvIiwibWVtYmVyc2hpcCI6Im12ZC1jcmVkZW50aWFsczptZW1iZXJzaGlwIiwibWVtYmVyc2hpcFR5cGUiOiJtdmQtY3JlZGVudGlhbHM6bWVtYmVyc2hpcFR5cGUiLCJ3ZWJzaXRlIjoibXZkLWNyZWRlbnRpYWxzOndlYnNpdGUiLCJjb250YWN0IjoibXZkLWNyZWRlbnRpYWxzOmNvbnRhY3QiLCJzaW5jZSI6Im12ZC1jcmVkZW50aWFsczpzaW5jZSJ9XSwiaWQiOiJodHRwOi8vb3JnLnlvdXJkYXRhc3BhY2UuY29tL2NyZWRlbnRpYWxzLzIzNDciLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiaHR0cDovL29yZy55b3VyZGF0YXNwYWNlLmNvbSNNZW1iZXJzaGlwQ3JlZGVudGlhbCJdLCJpc3N1ZXIiOiJkaWQ6d2ViOmRhdGFzcGFjZS1pc3N1ZXIiLCJpc3N1YW5jZURhdGUiOiIyMDIzLTA4LTE4VDAwOjAwOjAwWiIsImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImlkIjoiZGlkOndlYjpjb25zdW1lci1pZGVudGl0eWh1YiUzQTcwODM6Y29uc3VtZXIiLCJtZW1iZXJzaGlwIjp7Im1lbWJlcnNoaXBUeXBlIjoiRnVsbE1lbWJlciIsIndlYnNpdGUiOiJ3d3cud2hhdGV2ZXIuY29tIiwiY29udGFjdCI6ImZpenouYnV6ekB3aGF0ZXZlci5jb20iLCJzaW5jZSI6IjIwMjMtMDEtMDFUMDA6MDA6MDBaIn19fSwiaWF0IjoxNzM2MzI5MTA4fQ.d2kp76qw4gP0BAXCa1TWsoe3A5k6eC9I4uOwmKbFp8lzMzR383Dhm23R0Awp_xxVt6RBYLMqCot3j02qzjR9BA\",\n    \"format\": \"JWT\",\n    \"credential\": {\n      \"credentialSubject\": [\n        {\n          \"claims\": {\n            \"membershipType\": \"FullMember\",\n            \"website\": \"www.some-other-website.com\",\n            \"contact\": \"bar.baz@company.com\",\n            \"since\": \"2023-01-01T00:00:00Z\"\n          },\n          \"id\": \"did:web:consumer-identityhub%3A7083:consumer\"\n        }\n      ],\n      \"id\": \"http://org.yourdataspace.com/credentials/2347\",\n      \"type\": [\n        \"VerifiableCredential\",\n        \"MembershipCredential\"\n      ],\n      \"issuer\": {\n        \"id\": \"did:web:dataspace-issuer\",\n        \"additionalProperties\": {}\n      },\n      \"issuanceDate\": 1702339200.000000000,\n      \"expirationDate\": null,\n      \"credentialStatus\": null,\n      \"description\": null,\n      \"name\": null\n    }\n  }\n}\n"
            },
            "id": "mvd/consumer-identityhub-credentials",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-identityhub-credentials",
                "namespace": "mvd",
                "resource_version": "715",
                "uid": "c1f584a1-6f05-46d0-934f-96ae07237d5c"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-identityhub",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "identityhub",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-identityhub",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "consumer-identityhub"
                },
                "name": "consumer-identityhub",
                "namespace": "mvd",
                "resource_version": "1006",
                "uid": "ff5bfd43-e48e-468b-abfb-55ea468b7551"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "consumer-identityhub"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "consumer-identityhub"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "consumer-identityhub-ih-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/identity-hub:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/liveness",
                                    "port": "7080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "identity-hub",
                            "port": [
                              {
                                "container_port": 7082,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "pres-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 1044,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "debug",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 7081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "identity",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 7083,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "did",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 7080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "default-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/readiness",
                                    "port": "7080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/startup",
                                    "port": "7080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/credentials",
                                "mount_propagation": "None",
                                "name": "credentials-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "consumer-identityhub-credentials",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "credentials-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-identityhub.kubernetes_config_map.identityhub-config",
            "module.consumer-identityhub.kubernetes_config_map.identityhub-credentials-map",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-identityhub",
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "api-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mvd/consumer-identityhub-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/rewrite-target": "/$2",
                  "nginx.ingress.kubernetes.io/use-regex": "true"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "consumer-identityhub-ingress",
                "namespace": "mvd",
                "resource_version": "1136",
                "uid": "02d73629-be7d-43f8-ad09-4628c9801d18"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "consumer-identityhub",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 7081
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/consumer/cs(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "192.168.49.2"
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-identityhub.kubernetes_config_map.identityhub-config",
            "module.consumer-identityhub.kubernetes_config_map.identityhub-credentials-map",
            "module.consumer-identityhub.kubernetes_deployment.identityhub",
            "module.consumer-identityhub.kubernetes_service.ih-service",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-identityhub",
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "did-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mvd/consumer-did-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/rewrite-target": "/consumer/$2"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "consumer-did-ingress",
                "namespace": "mvd",
                "resource_version": "1137",
                "uid": "a6868c46-8ad1-4431-9c94-2b2b3a297e5d"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "consumer-identityhub",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 7083
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/consumer(/|\u0026)(.*)",
                            "path_type": "ImplementationSpecific"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "192.168.49.2"
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-identityhub.kubernetes_config_map.identityhub-config",
            "module.consumer-identityhub.kubernetes_config_map.identityhub-credentials-map",
            "module.consumer-identityhub.kubernetes_deployment.identityhub",
            "module.consumer-identityhub.kubernetes_service.ih-service",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-identityhub",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "ih-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-identityhub",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-identityhub",
                "namespace": "mvd",
                "resource_version": "1035",
                "uid": "e9303d69-eb89-424c-a70b-b6f0746c8fb8"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.104.200.105",
                "cluster_ips": [
                  "10.104.200.105"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "presentation",
                    "node_port": 32050,
                    "port": 7082,
                    "protocol": "TCP",
                    "target_port": "7082"
                  },
                  {
                    "app_protocol": "",
                    "name": "debug",
                    "node_port": 31852,
                    "port": 1044,
                    "protocol": "TCP",
                    "target_port": "1044"
                  },
                  {
                    "app_protocol": "",
                    "name": "management",
                    "node_port": 32676,
                    "port": 7081,
                    "protocol": "TCP",
                    "target_port": "7081"
                  },
                  {
                    "app_protocol": "",
                    "name": "did",
                    "node_port": 31464,
                    "port": 7083,
                    "protocol": "TCP",
                    "target_port": "7083"
                  },
                  {
                    "app_protocol": "",
                    "name": "sts",
                    "node_port": 32694,
                    "port": 7084,
                    "protocol": "TCP",
                    "target_port": "7084"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "consumer-identityhub"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-identityhub.kubernetes_config_map.identityhub-config",
            "module.consumer-identityhub.kubernetes_config_map.identityhub-credentials-map",
            "module.consumer-identityhub.kubernetes_deployment.identityhub",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-sts.kubernetes_service.sts-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-postgres",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "postgres-env",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "POSTGRES_PASSWORD": "postgres",
              "POSTGRES_USER": "postgres"
            },
            "id": "mvd/consumer-postgres-env",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-postgres-env",
                "namespace": "mvd",
                "resource_version": "597",
                "uid": "6efcc986-9c74-4244-a521-50bca5790f3c"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-postgres",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "postgres",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-postgres",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "consumer-postgres"
                },
                "name": "consumer-postgres",
                "namespace": "mvd",
                "resource_version": "726",
                "uid": "9640432f-01f6-423f-9e7e-e3f6e62467e6"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "consumer-postgres"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "consumer-postgres"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "consumer-postgres-env",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "postgres:16.3-alpine3.20",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "pg_isready",
                                      "-U",
                                      "postgres"
                                    ]
                                  }
                                ],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "consumer-postgres",
                            "port": [
                              {
                                "container_port": 5432,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "postgres-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/docker-entrypoint-initdb.d/consumer-initdb-config.sql",
                                "mount_propagation": "None",
                                "name": "consumer-initdb-config",
                                "read_only": true,
                                "sub_path": "consumer-initdb-config.sql"
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "consumer-initdb-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "consumer-initdb-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-postgres.kubernetes_config_map.postgres-env"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-postgres",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "pg-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-postgres-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-postgres-service",
                "namespace": "mvd",
                "resource_version": "730",
                "uid": "b217bbc1-3330-408e-b57b-3402eab7022f"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.99.229.222",
                "cluster_ips": [
                  "10.99.229.222"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "pg-port",
                    "node_port": 0,
                    "port": 5432,
                    "protocol": "TCP",
                    "target_port": "5432"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "consumer-postgres"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-sts",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "sts-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_API_ACCOUNTS_KEY": "password",
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "consumer",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://consumer-postgres-service:5432/consumer",
              "EDC_DATASOURCE_DEFAULT_USER": "consumer",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://consumer-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1046",
              "WEB_HTTP_ACCOUNTS_PATH": "/api",
              "WEB_HTTP_ACCOUNTS_PORT": "8081",
              "WEB_HTTP_PATH": "/internal",
              "WEB_HTTP_PORT": "8080",
              "WEB_HTTP_STS_PATH": "/api/sts",
              "WEB_HTTP_STS_PORT": "8082"
            },
            "id": "mvd/consumer-sts-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-sts-config",
                "namespace": "mvd",
                "resource_version": "735",
                "uid": "ac353499-b509-4c94-ae47-bc39a6768e21"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-sts",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "sts",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-sts",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "consumer-sts"
                },
                "name": "consumer-sts",
                "namespace": "mvd",
                "resource_version": "855",
                "uid": "4793b982-5f52-42b0-abb5-fe279c42db3f"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "consumer-sts"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "consumer-sts"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "consumer-sts-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/sts:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/internal/check/liveness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "sts",
                            "port": [
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "accounts-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8082,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "sts-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/internal/check/readiness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/internal/check/startup",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-sts",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "sts-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/consumer-sts-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "consumer-sts-service",
                "namespace": "mvd",
                "resource_version": "861",
                "uid": "430191a4-8bd6-4448-98d5-d81ffd6beacb"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.102.50.11",
                "cluster_ips": [
                  "10.102.50.11"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "accounts-port",
                    "node_port": 0,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "8081"
                  },
                  {
                    "app_protocol": "",
                    "name": "sts-port",
                    "node_port": 0,
                    "port": 8082,
                    "protocol": "TCP",
                    "target_port": "8082"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "consumer-sts"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-consumer",
            "kubernetes_namespace.ns",
            "module.consumer-postgres.kubernetes_config_map.postgres-env",
            "module.consumer-postgres.kubernetes_deployment.postgres",
            "module.consumer-postgres.kubernetes_service.pg-service",
            "module.consumer-sts.kubernetes_config_map.sts-config",
            "module.consumer-sts.kubernetes_deployment.sts",
            "module.consumer-vault.helm_release.vault",
            "module.consumer-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-vault",
      "mode": "managed",
      "type": "helm_release",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "vault",
            "cleanup_on_fail": true,
            "create_namespace": false,
            "dependency_update": true,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": true,
            "id": "consumer-vault",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.18.1",
                "chart": "vault",
                "first_deployed": 1736506991,
                "last_deployed": 1736506991,
                "name": "consumer-vault",
                "namespace": "mvd",
                "notes": "\nThank you for installing HashiCorp Vault!\n\nNow that you have deployed Vault, you should look over the docs on using\nVault with Kubernetes available here:\n\nhttps://developer.hashicorp.com/vault/docs\n\n\nYour release is named consumer-vault. To learn more about the release, try:\n\n  $ helm status consumer-vault\n  $ helm get manifest consumer-vault\n\n",
                "revision": 1,
                "values": "{\"hashicorp\":{\"healthCheck\":{\"enabled\":true,\"standbyOk\":true},\"paths\":{\"secret\":\"/v1/secret\"},\"timeout\":30,\"token\":\"root\"},\"injector\":{\"enabled\":false},\"server\":{\"dev\":{\"devRootToken\":\"root\",\"enabled\":true},\"postStart\":null}}",
                "version": "0.29.1"
              }
            ],
            "name": "consumer-vault",
            "namespace": "mvd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": true,
            "repository": "https://helm.releases.hashicorp.com",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": true,
            "set": [
              {
                "name": "hashicorp.token",
                "type": "",
                "value": "root"
              },
              {
                "name": "injector.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "server.dev.devRootToken",
                "type": "",
                "value": "root"
              },
              {
                "name": "server.dev.enabled",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "#\n#  Copyright (c) 2024 Metaform Systems, Inc.\n#\n#  This program and the accompanying materials are made available under the\n#  terms of the Apache License, Version 2.0 which is available at\n#  https://www.apache.org/licenses/LICENSE-2.0\n#\n#  SPDX-License-Identifier: Apache-2.0\n#\n#  Contributors:\n#       Metaform Systems, Inc. - initial API and implementation\n#\n\nserver:\n  postStart:\nhashicorp:\n  timeout: 30\n  healthCheck:\n    enabled: true\n    standbyOk: true\n  paths:\n    secret: /v1/secret\n"
            ],
            "verify": false,
            "version": "0.29.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "module": "module.consumer-vault",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "private_signing_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "ECDSA",
            "ecdsa_curve": "P256",
            "id": "7e8382393c6b4c76fb05de1a817766f09351c2d5",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAaAAAABNl\nY2RzYS1zaGEyLW5pc3RwMjU2AAAACG5pc3RwMjU2AAAAQQTATH7JpVvZG0qSXK9j\nlBjhXRTyMA3/K0ADyIm/idR2IvHEeUVWzpPn9Rlz5DeMYgR+MuJopyEDVrf5xcCG\nrXsSAAAAoHusmb57rJm+AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAy\nNTYAAABBBMBMfsmlW9kbSpJcr2OUGOFdFPIwDf8rQAPIib+J1HYi8cR5RVbOk+f1\nGXPkN4xiBH4y4minIQNWt/nFwIatexIAAAAhAP+hfFrzv+N81arrWCx5V+F7/GYN\nBhu2bK9LfgQ1G2cpAAAAAAECAwQFBgc=\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIP+hfFrzv+N81arrWCx5V+F7/GYNBhu2bK9LfgQ1G2cpoAoGCCqGSM49\nAwEHoUQDQgAEwEx+yaVb2RtKklyvY5QY4V0U8jAN/ytAA8iJv4nUdiLxxHlFVs6T\n5/UZc+Q3jGIEfjLiaKchA1a3+cXAhq17Eg==\n-----END EC PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg/6F8WvO/43zVqutY\nLHlX4Xv8Zg0GG7Zsr0t+BDUbZymhRANCAATATH7JpVvZG0qSXK9jlBjhXRTyMA3/\nK0ADyIm/idR2IvHEeUVWzpPn9Rlz5DeMYgR+MuJopyEDVrf5xcCGrXsS\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "df:86:44:0c:ef:7e:4c:ea:42:a6:80:b4:27:1e:f8:25",
            "public_key_fingerprint_sha256": "SHA256:6ebRKW0gshTdmM2CWRw9MLkxhBnLbLbSTuRw+g1C7yE",
            "public_key_openssh": "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMBMfsmlW9kbSpJcr2OUGOFdFPIwDf8rQAPIib+J1HYi8cR5RVbOk+f1GXPkN4xiBH4y4minIQNWt/nFwIatexI=\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEwEx+yaVb2RtKklyvY5QY4V0U8jAN\n/ytAA8iJv4nUdiLxxHlFVs6T5/UZc+Q3jGIEfjLiaKchA1a3+cXAhq17Eg==\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.provider-catalog-server",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "catalog-server-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_API_AUTH_KEY": "password",
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "catalog_server",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://provider-postgres-service:5432/catalog_server",
              "EDC_DATASOURCE_DEFAULT_USER": "catalog_server",
              "EDC_DSP_CALLBACK_ADDRESS": "http://provider-catalog-server-controlplane:8082/api/dsp",
              "EDC_IAM_DID_WEB_USE_HTTPS": "false",
              "EDC_IAM_ISSUER_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_IAM_STS_OAUTH_CLIENT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_IAM_STS_OAUTH_CLIENT_SECRET_ALIAS": "did:web:provider-identityhub%3A7083:provider-sts-client-secret",
              "EDC_IAM_STS_OAUTH_TOKEN_URL": "http://provider-sts-service:8082/api/sts/token",
              "EDC_IAM_STS_PRIVATEKEY_ALIAS": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_IAM_STS_PUBLICKEY_ID": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_IH_AUDIENCE_REGISTRY_PATH": "/etc/registry/registry.json",
              "EDC_MVD_PARTICIPANTS_LIST_FILE": "/etc/participants/participants.json",
              "EDC_PARTICIPANT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://provider-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044",
              "WEB_HTTP_CONTROL_PATH": "/api/control",
              "WEB_HTTP_CONTROL_PORT": "8083",
              "WEB_HTTP_MANAGEMENT_PATH": "/api/management",
              "WEB_HTTP_MANAGEMENT_PORT": "8081",
              "WEB_HTTP_PATH": "/api",
              "WEB_HTTP_PORT": "8080",
              "WEB_HTTP_PROTOCOL_PATH": "/api/dsp",
              "WEB_HTTP_PROTOCOL_PORT": "8082"
            },
            "id": "mvd/provider-catalog-server-connector-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-catalog-server-connector-config",
                "namespace": "mvd",
                "resource_version": "915",
                "uid": "81cde80c-3f86-4201-84f9-e7b5ec05eca1"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-catalog-server",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "connector",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-catalog-server",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "provider-catalog-server"
                },
                "name": "provider-catalog-server",
                "namespace": "mvd",
                "resource_version": "2235",
                "uid": "e1291ccd-9e2b-4988-b357-1658b735b6c2"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "provider-catalog-server"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "provider-catalog-server"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "provider-catalog-server-connector-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/catalog-server:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/liveness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "provider-catalog-server",
                            "port": [
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "management-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "default-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 1044,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "debug-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/readiness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/startup",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/registry",
                                "mount_propagation": "None",
                                "name": "registry-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "provider-catalog-server-connector-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "registry-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-catalog-server.kubernetes_config_map.catalog-server-config",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-catalog-server",
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "api-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mvd/provider-catalog-server-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/rewrite-target": "/$2",
                  "nginx.ingress.kubernetes.io/use-regex": "true"
                },
                "generate_name": "",
                "generation": 1,
                "labels": null,
                "name": "provider-catalog-server-ingress",
                "namespace": "mvd",
                "resource_version": "2270",
                "uid": "62cee30a-0608-49cc-92ef-dd13d01afa80"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-catalog-server-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8080
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-catalog-server/health(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-catalog-server-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8081
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-catalog-server/cp(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-catalog-server.kubernetes_config_map.catalog-server-config",
            "module.provider-catalog-server.kubernetes_deployment.connector",
            "module.provider-catalog-server.kubernetes_service.controlplane-service",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-catalog-server",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "controlplane-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-catalog-server-controlplane",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "provider-catalog-server-controlplane",
                "namespace": "mvd",
                "resource_version": "2257",
                "uid": "9f26e558-bdda-451c-9fe4-1cffe04d6d67"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.111.82.123",
                "cluster_ips": [
                  "10.111.82.123"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "health",
                    "node_port": 30476,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  },
                  {
                    "app_protocol": "",
                    "name": "management",
                    "node_port": 32164,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "8081"
                  },
                  {
                    "app_protocol": "",
                    "name": "protocol",
                    "node_port": 32493,
                    "port": 8082,
                    "protocol": "TCP",
                    "target_port": "8082"
                  },
                  {
                    "app_protocol": "",
                    "name": "debug",
                    "node_port": 32457,
                    "port": 1044,
                    "protocol": "TCP",
                    "target_port": "1044"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "provider-catalog-server"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-catalog-server.kubernetes_config_map.catalog-server-config",
            "module.provider-catalog-server.kubernetes_deployment.connector",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-identityhub",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "identityhub-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_API_AUTH_KEY": "password",
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "identity",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://provider-postgres-service:5432/identity",
              "EDC_DATASOURCE_DEFAULT_USER": "identity",
              "EDC_IAM_ACCESSTOKEN_JTI_VALIDATION": "true",
              "EDC_IAM_DID_WEB_USE_HTTPS": "false",
              "EDC_IAM_STS_PRIVATEKEY_ALIAS": "key-1",
              "EDC_IAM_STS_PUBLICKEY_ID": "key-1",
              "EDC_IH_API_SUPERUSER_KEY": "c3VwZXItdXNlcg==.c3VwZXItc2VjcmV0LWtleQo=",
              "EDC_IH_IAM_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_IH_IAM_PUBLICKEY_ALIAS": "provider-identityhub-publickey",
              "EDC_MVD_CREDENTIALS_PATH": "/etc/credentials/",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_STS_ACCOUNTS_API_AUTH_HEADER_VALUE": "password",
              "EDC_STS_ACCOUNT_API_URL": "http://provider-sts-service:8081/api",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://provider-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044",
              "WEB_HTTP_DID_PATH": "/",
              "WEB_HTTP_DID_PORT": "7083",
              "WEB_HTTP_IDENTITY_PATH": "/api/identity",
              "WEB_HTTP_IDENTITY_PORT": "7081",
              "WEB_HTTP_PATH": "/api",
              "WEB_HTTP_PORT": "7080",
              "WEB_HTTP_PRESENTATION_PATH": "/api/presentation",
              "WEB_HTTP_PRESENTATION_PORT": "7082",
              "WEB_HTTP_STS_PATH": "/api/sts",
              "WEB_HTTP_STS_PORT": "7084"
            },
            "id": "mvd/provider-identityhub-ih-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-identityhub-ih-config",
                "namespace": "mvd",
                "resource_version": "917",
                "uid": "8ff0fc02-7cfb-4352-a53e-bf03ba0383a7"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-identityhub",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "identityhub-credentials-map",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "dataprocessor-credential.json": "{\n  \"id\": \"40e24588-b510-41ca-966c-c1e0f57d1ca7\",\n  \"participantId\": \"did:web:provider-identityhub%3A7083:provider\",\n  \"timestamp\": 1700659822500,\n  \"issuerId\": \"did:web:dataspace-issuer\",\n  \"holderId\": \"did:web:provider-identityhub%3A7083:provider\",\n  \"state\": 500,\n  \"issuancePolicy\": null,\n  \"reissuancePolicy\": null,\n  \"verifiableCredential\": {\n    \"format\": \"JSON_LD\",\n    \"rawVc\": \"eyJraWQiOiJkaWQ6d2ViOmRhdGFzcGFjZS1pc3N1ZXIja2V5LTEiLCJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJpc3MiOiJkaWQ6d2ViOmRhdGFzcGFjZS1pc3N1ZXIiLCJhdWQiOiJkaWQ6d2ViOnByb3ZpZGVyLWlkZW50aXR5aHViJTNBNzA4Mzpib2IiLCJzdWIiOiJkaWQ6d2ViOnByb3ZpZGVyLWlkZW50aXR5aHViJTNBNzA4Mzpib2IiLCJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vdzNpZC5vcmcvc2VjdXJpdHkvc3VpdGVzL2p3cy0yMDIwL3YxIiwiaHR0cHM6Ly93d3cudzMub3JnL25zL2RpZC92MSIseyJtdmQtY3JlZGVudGlhbHMiOiJodHRwczovL3czaWQub3JnL212ZC9jcmVkZW50aWFscy8iLCJjb250cmFjdFZlcnNpb24iOiJtdmQtY3JlZGVudGlhbHM6Y29udHJhY3RWZXJzaW9uIiwibGV2ZWwiOiJtdmQtY3JlZGVudGlhbHM6bGV2ZWwifV0sImlkIjoiaHR0cDovL29yZy55b3VyZGF0YXNwYWNlLmNvbS9jcmVkZW50aWFscy8yMzQ3IiwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsImh0dHA6Ly9vcmcueW91cmRhdGFzcGFjZS5jb20jRGF0YVByb2Nlc3NvckNyZWRlbnRpYWwiXSwiaXNzdWVyIjoiZGlkOndlYjpkYXRhc3BhY2UtaXNzdWVyIiwiaXNzdWFuY2VEYXRlIjoiMjAyMy0wOC0xOFQwMDowMDowMFoiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDp3ZWI6cHJvdmlkZXItaWRlbnRpdHlodWIlM0E3MDgzOnByb3ZpZGVyIiwibGV2ZWwiOiJwcm9jZXNzaW5nIiwiY29udHJhY3RWZXJzaW9uIjoiMS4wLjAifX0sImlhdCI6MTczNjMyOTEwOH0.h9lDJDlq4sxewcni_QYMlVm3Lb-Fazii9EXOXsrAt2fPVQobfXbxKXVY_7tbAu3NiRts5NwOZ2AgpFk3wqBmDA\",\n    \"credential\": {\n      \"credentialSubject\": [\n        {\n          \"claims\": {\n            \"id\": \"did:web:provider-identityhub%3A7083:provider\",\n            \"contractVersion\": \"1.0.0\",\n            \"level\": \"processing\"\n          }\n        }\n      ],\n      \"id\": \"http://org.yourdataspace.com/credentials/1265\",\n      \"type\": [\n        \"VerifiableCredential\",\n        \"DataProcessorCredential\"\n      ],\n      \"issuer\": {\n        \"id\": \"did:web:dataspace-issuer\",\n        \"additionalProperties\": {}\n      },\n      \"issuanceDate\": 1702339200.000000000,\n      \"expirationDate\": null,\n      \"credentialStatus\": null,\n      \"description\": null,\n      \"name\": null\n    }\n  }\n}\n",
              "membership-credential.json": "{\n  \"id\": \"40e24588-b510-41ca-966c-c1e0f57d1b14\",\n  \"participantId\": \"did:web:provider-identityhub%3A7083:provider\",\n  \"timestamp\": 1700659822500,\n  \"issuerId\": \"did:web:dataspace-issuer\",\n  \"holderId\": \"did:web:provider-identityhub%3A7083:provider\",\n  \"state\": 500,\n  \"issuancePolicy\": null,\n  \"reissuancePolicy\": null,\n  \"verifiableCredential\": {\n    \"rawVc\": \"eyJraWQiOiJkaWQ6d2ViOmRhdGFzcGFjZS1pc3N1ZXIja2V5LTEiLCJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJpc3MiOiJkaWQ6d2ViOmRhdGFzcGFjZS1pc3N1ZXIiLCJhdWQiOiJkaWQ6d2ViOnByb3ZpZGVyLWlkZW50aXR5aHViJTNBNzA4Mzpib2IiLCJzdWIiOiJkaWQ6d2ViOnByb3ZpZGVyLWlkZW50aXR5aHViJTNBNzA4Mzpib2IiLCJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vdzNpZC5vcmcvc2VjdXJpdHkvc3VpdGVzL2p3cy0yMDIwL3YxIiwiaHR0cHM6Ly93d3cudzMub3JnL25zL2RpZC92MSIseyJtdmQtY3JlZGVudGlhbHMiOiJodHRwczovL3czaWQub3JnL212ZC9jcmVkZW50aWFscy8iLCJtZW1iZXJzaGlwIjoibXZkLWNyZWRlbnRpYWxzOm1lbWJlcnNoaXAiLCJtZW1iZXJzaGlwVHlwZSI6Im12ZC1jcmVkZW50aWFsczptZW1iZXJzaGlwVHlwZSIsIndlYnNpdGUiOiJtdmQtY3JlZGVudGlhbHM6d2Vic2l0ZSIsImNvbnRhY3QiOiJtdmQtY3JlZGVudGlhbHM6Y29udGFjdCIsInNpbmNlIjoibXZkLWNyZWRlbnRpYWxzOnNpbmNlIn1dLCJpZCI6Imh0dHA6Ly9vcmcueW91cmRhdGFzcGFjZS5jb20vY3JlZGVudGlhbHMvMjM0NyIsInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJodHRwOi8vb3JnLnlvdXJkYXRhc3BhY2UuY29tI01lbWJlcnNoaXBDcmVkZW50aWFsIl0sImlzc3VlciI6ImRpZDp3ZWI6ZGF0YXNwYWNlLWlzc3VlciIsImlzc3VhbmNlRGF0ZSI6IjIwMjMtMDgtMThUMDA6MDA6MDBaIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6d2ViOnByb3ZpZGVyLWlkZW50aXR5aHViJTNBNzA4Mzpwcm92aWRlciIsIm1lbWJlcnNoaXAiOnsibWVtYmVyc2hpcFR5cGUiOiJGdWxsTWVtYmVyIiwid2Vic2l0ZSI6Ind3dy53aGF0ZXZlci5jb20iLCJjb250YWN0IjoibWl4Lm1heEB3aGF0ZXZlci5jb20iLCJzaW5jZSI6IjIwMjMtMDEtMDFUMDA6MDA6MDBaIn19fSwiaWF0IjoxNzM2MzI5MTA3fQ.VmKQfnipUBaYayrc50ssp2HqsDuHe9wOSOwi9y2lO7-Lmc7vQeVBAgrVE5y5eiUzrDl7DK0A8ruEb5jFmpHvAA\",\n    \"format\": \"JSON_LD\",\n    \"credential\": {\n      \"credentialSubject\": [\n        {\n          \"claims\": {\n            \"membership\": {\n              \"membershipType\": \"FullMember\",\n              \"website\": \"www.company-website.com\",\n              \"contact\": \"max.mustermann@company.com\",\n              \"since\": \"2023-05-08T00:00:00Z\"\n            }\n          },\n          \"id\": \"did:web:provider-identityhub%3A7083:provider\"\n        }\n      ],\n      \"id\": \"http://org.yourdataspace.com/credentials/1234\",\n      \"type\": [\n        \"VerifiableCredential\",\n        \"MembershipCredential\"\n      ],\n      \"issuer\": {\n        \"id\": \"did:web:dataspace-issuer\",\n        \"additionalProperties\": {}\n      },\n      \"issuanceDate\": 1702339200.000000000,\n      \"expirationDate\": null,\n      \"credentialStatus\": null,\n      \"description\": null,\n      \"name\": null\n    }\n  }\n}\n"
            },
            "id": "mvd/provider-identityhub-credentials",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-identityhub-credentials",
                "namespace": "mvd",
                "resource_version": "720",
                "uid": "6f3d9fbd-cfe7-421d-a88f-1455283b5ff3"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-identityhub",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "identityhub",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-identityhub",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "provider-identityhub"
                },
                "name": "provider-identityhub",
                "namespace": "mvd",
                "resource_version": "1677",
                "uid": "d8f88f28-1b0b-46de-968f-81dd2082b922"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "provider-identityhub"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "provider-identityhub"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "provider-identityhub-ih-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/identity-hub:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/liveness",
                                    "port": "7080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "identity-hub",
                            "port": [
                              {
                                "container_port": 7082,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "pres-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 1044,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "debug",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 7081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "identity",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 7083,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "did",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 7080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "default-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/readiness",
                                    "port": "7080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/startup",
                                    "port": "7080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/credentials",
                                "mount_propagation": "None",
                                "name": "credentials-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "provider-identityhub-credentials",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "credentials-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-identityhub.kubernetes_config_map.identityhub-config",
            "module.provider-identityhub.kubernetes_config_map.identityhub-credentials-map",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-identityhub",
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "api-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mvd/provider-identityhub-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/rewrite-target": "/$2",
                  "nginx.ingress.kubernetes.io/use-regex": "true"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "provider-identityhub-ingress",
                "namespace": "mvd",
                "resource_version": "1722",
                "uid": "67698c38-a6b2-40f2-89ab-5d92af31e503"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-identityhub",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 7081
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider/cs(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "192.168.49.2"
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-identityhub.kubernetes_config_map.identityhub-config",
            "module.provider-identityhub.kubernetes_config_map.identityhub-credentials-map",
            "module.provider-identityhub.kubernetes_deployment.identityhub",
            "module.provider-identityhub.kubernetes_service.ih-service",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-identityhub",
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "did-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mvd/provider-did-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/rewrite-target": "/provider/$2"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "provider-did-ingress",
                "namespace": "mvd",
                "resource_version": "1723",
                "uid": "8345dbd5-8e31-48d3-91ed-d0e44aefa825"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-identityhub",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 7083
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider(/|\u0026)(.*)",
                            "path_type": "ImplementationSpecific"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "192.168.49.2"
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-identityhub.kubernetes_config_map.identityhub-config",
            "module.provider-identityhub.kubernetes_config_map.identityhub-credentials-map",
            "module.provider-identityhub.kubernetes_deployment.identityhub",
            "module.provider-identityhub.kubernetes_service.ih-service",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-identityhub",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "ih-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-identityhub",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-identityhub",
                "namespace": "mvd",
                "resource_version": "1691",
                "uid": "a8f33fa3-e2bd-444c-a65c-4fa38c819de4"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.106.211.241",
                "cluster_ips": [
                  "10.106.211.241"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "presentation",
                    "node_port": 31486,
                    "port": 7082,
                    "protocol": "TCP",
                    "target_port": "7082"
                  },
                  {
                    "app_protocol": "",
                    "name": "debug",
                    "node_port": 32720,
                    "port": 1044,
                    "protocol": "TCP",
                    "target_port": "1044"
                  },
                  {
                    "app_protocol": "",
                    "name": "management",
                    "node_port": 32759,
                    "port": 7081,
                    "protocol": "TCP",
                    "target_port": "7081"
                  },
                  {
                    "app_protocol": "",
                    "name": "did",
                    "node_port": 31323,
                    "port": 7083,
                    "protocol": "TCP",
                    "target_port": "7083"
                  },
                  {
                    "app_protocol": "",
                    "name": "sts",
                    "node_port": 31771,
                    "port": 7084,
                    "protocol": "TCP",
                    "target_port": "7084"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "provider-identityhub"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-identityhub.kubernetes_config_map.identityhub-config",
            "module.provider-identityhub.kubernetes_config_map.identityhub-credentials-map",
            "module.provider-identityhub.kubernetes_deployment.identityhub",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-manufacturing-connector",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "connector-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_API_AUTH_KEY": "password",
              "EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS": "10",
              "EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS": "10",
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "provider-manufacturing",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://provider-postgres-service:5432/provider_manufacturing",
              "EDC_DATASOURCE_DEFAULT_USER": "manufacturing",
              "EDC_DSP_CALLBACK_ADDRESS": "http://provider-manufacturing-controlplane:8082/api/dsp",
              "EDC_IAM_DID_WEB_USE_HTTPS": "false",
              "EDC_IAM_ISSUER_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_IAM_STS_OAUTH_CLIENT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_IAM_STS_OAUTH_CLIENT_SECRET_ALIAS": "did:web:provider-identityhub%3A7083:provider-sts-client-secret",
              "EDC_IAM_STS_OAUTH_TOKEN_URL": "http://provider-sts-service:8082/api/sts/token",
              "EDC_IAM_STS_PRIVATEKEY_ALIAS": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_IAM_STS_PUBLICKEY_ID": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_IH_AUDIENCE_REGISTRY_PATH": "/etc/registry/registry.json",
              "EDC_MVD_PARTICIPANTS_LIST_FILE": "/etc/participants/participants.json",
              "EDC_PARTICIPANT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://provider-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044",
              "WEB_HTTP_CATALOG_AUTH_KEY": "password",
              "WEB_HTTP_CATALOG_AUTH_TYPE": "tokenbased",
              "WEB_HTTP_CATALOG_PATH": "/api/catalog",
              "WEB_HTTP_CATALOG_PORT": "8084",
              "WEB_HTTP_CONTROL_PATH": "/api/control",
              "WEB_HTTP_CONTROL_PORT": "8083",
              "WEB_HTTP_MANAGEMENT_PATH": "/api/management",
              "WEB_HTTP_MANAGEMENT_PORT": "8081",
              "WEB_HTTP_PATH": "/api",
              "WEB_HTTP_PORT": "8080",
              "WEB_HTTP_PROTOCOL_PATH": "/api/dsp",
              "WEB_HTTP_PROTOCOL_PORT": "8082"
            },
            "id": "mvd/provider-manufacturing-controlplane-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-manufacturing-controlplane-config",
                "namespace": "mvd",
                "resource_version": "916",
                "uid": "4b05c2ca-921a-4c2c-a573-1dd21be2aa1d"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-manufacturing-connector",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "dataplane-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "provider-manufacturing",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://provider-postgres-service:5432/provider_manufacturing",
              "EDC_DATASOURCE_DEFAULT_USER": "manufacturing",
              "EDC_DPF_SELECTOR_URL": "http://provider-manufacturing-controlplane:8083/api/control/v1/dataplanes",
              "EDC_HOSTNAME": "provider-manufacturing-dataplane",
              "EDC_IAM_STS_OAUTH_CLIENT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_IAM_STS_OAUTH_CLIENT_SECRET_ALIAS": "consumer-participant-sts-client-secret",
              "EDC_IAM_STS_OAUTH_TOKEN_URL": "http://provider-sts-service:8082/api/sts/token",
              "EDC_PARTICIPANT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_RUNTIME_ID": "provider-manufacturing-dataplane",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://provider-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044",
              "WEB_HTTP_CONTROL_PATH": "/api/control",
              "WEB_HTTP_CONTROL_PORT": "8083",
              "WEB_HTTP_PATH": "/api",
              "WEB_HTTP_PORT": "8080",
              "WEB_HTTP_PUBLIC_PATH": "/api/public",
              "WEB_HTTP_PUBLIC_PORT": "11002"
            },
            "id": "mvd/provider-manufacturing-dataplane-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-manufacturing-dataplane-config",
                "namespace": "mvd",
                "resource_version": "913",
                "uid": "3d2fc29b-ea04-4d6d-b053-8e7eb420a11f"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-manufacturing-connector",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "participants-map",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "participants.json": "{\n  \"consumer-corp\": \"did:web:consumer-identityhub%3A7083:consumer\",\n  \"provider-corp\": \"did:web:provider-identityhub%3A7083:provider\"\n}"
            },
            "id": "mvd/provider-manufacturing-participants",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-manufacturing-participants",
                "namespace": "mvd",
                "resource_version": "581",
                "uid": "d6de8bf3-2ef8-4f85-88c4-230763e26458"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "module": "module.provider-manufacturing-connector",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "controlplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-manufacturing-controlplane",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "provider-manufacturing-controlplane"
                },
                "name": "provider-manufacturing-controlplane",
                "namespace": "mvd",
                "resource_version": "2231",
                "uid": "cf8b1d39-98fe-4b1a-9795-a96eb52845df"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "provider-manufacturing-controlplane"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "provider-manufacturing-controlplane"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "provider-manufacturing-controlplane-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/controlplane:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/liveness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "connector-provider-manufacturing",
                            "port": [
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "management-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "default-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 1044,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "debug-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/readiness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/startup",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/registry",
                                "mount_propagation": "None",
                                "name": "registry-volume",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/etc/participants",
                                "mount_propagation": "None",
                                "name": "participants-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "provider-manufacturing-controlplane-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "registry-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "provider-manufacturing-participants",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "participants-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-manufacturing-connector.kubernetes_config_map.connector-config",
            "module.provider-manufacturing-connector.kubernetes_config_map.participants-map",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-manufacturing-connector",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "dataplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-manufacturing-dataplane",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "provider-manufacturing-dataplane"
                },
                "name": "provider-manufacturing-dataplane",
                "namespace": "mvd",
                "resource_version": "2311",
                "uid": "94601134-9e97-4f7e-8565-3ca423fcc545"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "provider-manufacturing-dataplane"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "provider-manufacturing-dataplane"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "provider-manufacturing-dataplane-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/dataplane:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/liveness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "dataplane-provider-manufacturing",
                            "port": [
                              {
                                "container_port": 11002,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "public-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 1044,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "debug-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/readiness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/startup",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-manufacturing-connector.kubernetes_config_map.connector-config",
            "module.provider-manufacturing-connector.kubernetes_config_map.dataplane-config",
            "module.provider-manufacturing-connector.kubernetes_config_map.participants-map",
            "module.provider-manufacturing-connector.kubernetes_deployment.controlplane",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-manufacturing-connector",
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "api-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mvd/provider-manufacturing-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/rewrite-target": "/$2",
                  "nginx.ingress.kubernetes.io/use-regex": "true"
                },
                "generate_name": "",
                "generation": 1,
                "labels": null,
                "name": "provider-manufacturing-ingress",
                "namespace": "mvd",
                "resource_version": "2325",
                "uid": "8ecfd2f4-c119-42b7-bbc6-cb1e7ccb2b51"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-manufacturing-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8080
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-manufacturing/health(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-manufacturing-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8081
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-manufacturing/cp(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-manufacturing-dataplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 11002
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-manufacturing/public(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-manufacturing-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8084
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-manufacturing/fc(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-manufacturing-vault",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8200
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-manufacturing/vault(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-manufacturing-connector.kubernetes_config_map.connector-config",
            "module.provider-manufacturing-connector.kubernetes_config_map.dataplane-config",
            "module.provider-manufacturing-connector.kubernetes_config_map.participants-map",
            "module.provider-manufacturing-connector.kubernetes_deployment.controlplane",
            "module.provider-manufacturing-connector.kubernetes_deployment.dataplane",
            "module.provider-manufacturing-connector.kubernetes_service.controlplane-service",
            "module.provider-manufacturing-connector.kubernetes_service.dataplane-service",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-manufacturing-connector",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "controlplane-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-manufacturing-controlplane",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "provider-manufacturing-controlplane",
                "namespace": "mvd",
                "resource_version": "2267",
                "uid": "929735e9-8f7b-4874-b0c5-e0b5c151ce8b"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.104.135.72",
                "cluster_ips": [
                  "10.104.135.72"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "health",
                    "node_port": 31120,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  },
                  {
                    "app_protocol": "",
                    "name": "management",
                    "node_port": 31476,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "8081"
                  },
                  {
                    "app_protocol": "",
                    "name": "catalog",
                    "node_port": 30773,
                    "port": 8084,
                    "protocol": "TCP",
                    "target_port": "8084"
                  },
                  {
                    "app_protocol": "",
                    "name": "protocol",
                    "node_port": 31939,
                    "port": 8082,
                    "protocol": "TCP",
                    "target_port": "8082"
                  },
                  {
                    "app_protocol": "",
                    "name": "debug",
                    "node_port": 30678,
                    "port": 1044,
                    "protocol": "TCP",
                    "target_port": "1044"
                  },
                  {
                    "app_protocol": "",
                    "name": "control",
                    "node_port": 32202,
                    "port": 8083,
                    "protocol": "TCP",
                    "target_port": "8083"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "provider-manufacturing-controlplane"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-manufacturing-connector.kubernetes_config_map.connector-config",
            "module.provider-manufacturing-connector.kubernetes_config_map.participants-map",
            "module.provider-manufacturing-connector.kubernetes_deployment.controlplane",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-manufacturing-connector",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "dataplane-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-manufacturing-dataplane",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "provider-manufacturing-dataplane",
                "namespace": "mvd",
                "resource_version": "2322",
                "uid": "1bc8c597-4071-4c9e-b2ec-25c9174e197b"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.105.160.254",
                "cluster_ips": [
                  "10.105.160.254"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "control",
                    "node_port": 31415,
                    "port": 8083,
                    "protocol": "TCP",
                    "target_port": "8083"
                  },
                  {
                    "app_protocol": "",
                    "name": "public",
                    "node_port": 30926,
                    "port": 11002,
                    "protocol": "TCP",
                    "target_port": "11002"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "provider-manufacturing-dataplane"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-manufacturing-connector.kubernetes_config_map.connector-config",
            "module.provider-manufacturing-connector.kubernetes_config_map.dataplane-config",
            "module.provider-manufacturing-connector.kubernetes_config_map.participants-map",
            "module.provider-manufacturing-connector.kubernetes_deployment.controlplane",
            "module.provider-manufacturing-connector.kubernetes_deployment.dataplane",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-postgres",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "postgres-env",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "POSTGRES_PASSWORD": "postgres",
              "POSTGRES_USER": "postgres"
            },
            "id": "mvd/provider-postgres-env",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-postgres-env",
                "namespace": "mvd",
                "resource_version": "596",
                "uid": "e1a7a472-a300-49da-86c5-15411c88806b"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "module": "module.provider-postgres",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "postgres",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-postgres",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "provider-postgres"
                },
                "name": "provider-postgres",
                "namespace": "mvd",
                "resource_version": "725",
                "uid": "4795ac7f-7be3-470c-aa01-207411cb135d"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "provider-postgres"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "provider-postgres"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "provider-postgres-env",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "postgres:16.3-alpine3.20",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "pg_isready",
                                      "-U",
                                      "postgres"
                                    ]
                                  }
                                ],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "provider-postgres",
                            "port": [
                              {
                                "container_port": 5432,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "postgres-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/docker-entrypoint-initdb.d/cs-initdb-config.sql",
                                "mount_propagation": "None",
                                "name": "cs-initdb-config",
                                "read_only": true,
                                "sub_path": "cs-initdb-config.sql"
                              },
                              {
                                "mount_path": "/docker-entrypoint-initdb.d/ih-initdb-config.sql",
                                "mount_propagation": "None",
                                "name": "ih-initdb-config",
                                "read_only": true,
                                "sub_path": "ih-initdb-config.sql"
                              },
                              {
                                "mount_path": "/docker-entrypoint-initdb.d/provider-manufacturing-initdb-config.sql",
                                "mount_propagation": "None",
                                "name": "provider-manufacturing-initdb-config",
                                "read_only": true,
                                "sub_path": "provider-manufacturing-initdb-config.sql"
                              },
                              {
                                "mount_path": "/docker-entrypoint-initdb.d/provider-qna-initdb-config.sql",
                                "mount_propagation": "None",
                                "name": "provider-qna-initdb-config",
                                "read_only": true,
                                "sub_path": "provider-qna-initdb-config.sql"
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "cs-initdb-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "cs-initdb-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "ih-initdb-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "ih-initdb-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "provider-manufacturing-initdb-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "provider-manufacturing-initdb-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "provider-qna-initdb-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "provider-qna-initdb-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env"
          ]
        }
      ]
    },
    {
      "module": "module.provider-postgres",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "pg-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-postgres-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-postgres-service",
                "namespace": "mvd",
                "resource_version": "734",
                "uid": "c8f934b3-69fc-4eef-8ddf-3fed8c558ac0"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.109.169.84",
                "cluster_ips": [
                  "10.109.169.84"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "pg-port",
                    "node_port": 0,
                    "port": 5432,
                    "protocol": "TCP",
                    "target_port": "5432"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "provider-postgres"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres"
          ]
        }
      ]
    },
    {
      "module": "module.provider-qna-connector",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "connector-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_API_AUTH_KEY": "password",
              "EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS": "10",
              "EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS": "10",
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "provider-qna",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://provider-postgres-service:5432/provider_qna",
              "EDC_DATASOURCE_DEFAULT_USER": "qna",
              "EDC_DSP_CALLBACK_ADDRESS": "http://provider-qna-controlplane:8082/api/dsp",
              "EDC_IAM_DID_WEB_USE_HTTPS": "false",
              "EDC_IAM_ISSUER_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_IAM_STS_OAUTH_CLIENT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_IAM_STS_OAUTH_CLIENT_SECRET_ALIAS": "did:web:provider-identityhub%3A7083:provider-sts-client-secret",
              "EDC_IAM_STS_OAUTH_TOKEN_URL": "http://provider-sts-service:8082/api/sts/token",
              "EDC_IAM_STS_PRIVATEKEY_ALIAS": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_IAM_STS_PUBLICKEY_ID": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_IH_AUDIENCE_REGISTRY_PATH": "/etc/registry/registry.json",
              "EDC_MVD_PARTICIPANTS_LIST_FILE": "/etc/participants/participants.json",
              "EDC_PARTICIPANT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://provider-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044",
              "WEB_HTTP_CATALOG_AUTH_KEY": "password",
              "WEB_HTTP_CATALOG_AUTH_TYPE": "tokenbased",
              "WEB_HTTP_CATALOG_PATH": "/api/catalog",
              "WEB_HTTP_CATALOG_PORT": "8084",
              "WEB_HTTP_CONTROL_PATH": "/api/control",
              "WEB_HTTP_CONTROL_PORT": "8083",
              "WEB_HTTP_MANAGEMENT_PATH": "/api/management",
              "WEB_HTTP_MANAGEMENT_PORT": "8081",
              "WEB_HTTP_PATH": "/api",
              "WEB_HTTP_PORT": "8080",
              "WEB_HTTP_PROTOCOL_PATH": "/api/dsp",
              "WEB_HTTP_PROTOCOL_PORT": "8082"
            },
            "id": "mvd/provider-qna-controlplane-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-qna-controlplane-config",
                "namespace": "mvd",
                "resource_version": "918",
                "uid": "feab35be-4484-4b8c-a205-c7edcb98b86b"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-qna-connector",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "dataplane-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "provider-qna",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://provider-postgres-service:5432/provider_qna",
              "EDC_DATASOURCE_DEFAULT_USER": "qna",
              "EDC_DPF_SELECTOR_URL": "http://provider-qna-controlplane:8083/api/control/v1/dataplanes",
              "EDC_HOSTNAME": "provider-qna-dataplane",
              "EDC_IAM_STS_OAUTH_CLIENT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_IAM_STS_OAUTH_CLIENT_SECRET_ALIAS": "consumer-participant-sts-client-secret",
              "EDC_IAM_STS_OAUTH_TOKEN_URL": "http://provider-sts-service:8082/api/sts/token",
              "EDC_PARTICIPANT_ID": "did:web:provider-identityhub%3A7083:provider",
              "EDC_RUNTIME_ID": "provider-qna-dataplane",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS": "did:web:provider-identityhub%3A7083:provider#key-1",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://provider-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044",
              "WEB_HTTP_CONTROL_PATH": "/api/control",
              "WEB_HTTP_CONTROL_PORT": "8083",
              "WEB_HTTP_PATH": "/api",
              "WEB_HTTP_PORT": "8080",
              "WEB_HTTP_PUBLIC_PATH": "/api/public",
              "WEB_HTTP_PUBLIC_PORT": "11002"
            },
            "id": "mvd/provider-qna-dataplane-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-qna-dataplane-config",
                "namespace": "mvd",
                "resource_version": "914",
                "uid": "93abd3a4-0fc5-44ed-9b93-19a6f8a89e0a"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-qna-connector",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "participants-map",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "participants.json": "{\n  \"consumer-corp\": \"did:web:consumer-identityhub%3A7083:consumer\",\n  \"provider-corp\": \"did:web:provider-identityhub%3A7083:provider\"\n}"
            },
            "id": "mvd/provider-qna-participants",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-qna-participants",
                "namespace": "mvd",
                "resource_version": "583",
                "uid": "6f3ccbfd-b02f-4046-917f-c4261a3a854a"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "module": "module.provider-qna-connector",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "controlplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-qna-controlplane",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "provider-qna-controlplane"
                },
                "name": "provider-qna-controlplane",
                "namespace": "mvd",
                "resource_version": "1733",
                "uid": "5febde82-e1d5-46c0-9383-7fa727fd0b34"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "provider-qna-controlplane"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "provider-qna-controlplane"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "provider-qna-controlplane-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/controlplane:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/liveness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "connector-provider-qna",
                            "port": [
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "management-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "default-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 1044,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "debug-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/readiness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/startup",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/registry",
                                "mount_propagation": "None",
                                "name": "registry-volume",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/etc/participants",
                                "mount_propagation": "None",
                                "name": "participants-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "provider-qna-controlplane-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "registry-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "provider-qna-participants",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "participants-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-qna-connector.kubernetes_config_map.connector-config",
            "module.provider-qna-connector.kubernetes_config_map.participants-map",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-qna-connector",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "dataplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-qna-dataplane",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "provider-qna-dataplane"
                },
                "name": "provider-qna-dataplane",
                "namespace": "mvd",
                "resource_version": "1792",
                "uid": "aab0d352-67d9-4c59-8729-4048a43f23cc"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "provider-qna-dataplane"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "provider-qna-dataplane"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "provider-qna-dataplane-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/dataplane:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/liveness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "dataplane-provider-qna",
                            "port": [
                              {
                                "container_port": 11002,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "public-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 1044,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "debug-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/readiness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/api/check/startup",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-qna-connector.kubernetes_config_map.connector-config",
            "module.provider-qna-connector.kubernetes_config_map.dataplane-config",
            "module.provider-qna-connector.kubernetes_config_map.participants-map",
            "module.provider-qna-connector.kubernetes_deployment.controlplane",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-qna-connector",
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "api-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mvd/provider-qna-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/rewrite-target": "/$2",
                  "nginx.ingress.kubernetes.io/use-regex": "true"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "provider-qna-ingress",
                "namespace": "mvd",
                "resource_version": "1827",
                "uid": "d4f97073-9e74-4716-bdc1-6f4635cd607e"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-qna-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8080
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-qna/health(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-qna-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8081
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-qna/cp(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-qna-dataplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 11002
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-qna/public(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-qna-controlplane",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8084
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-qna/fc(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "provider-qna-vault",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8200
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/provider-qna/vault(/|$)(.*)",
                            "path_type": "ImplementationSpecific"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "192.168.49.2"
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-qna-connector.kubernetes_config_map.connector-config",
            "module.provider-qna-connector.kubernetes_config_map.dataplane-config",
            "module.provider-qna-connector.kubernetes_config_map.participants-map",
            "module.provider-qna-connector.kubernetes_deployment.controlplane",
            "module.provider-qna-connector.kubernetes_deployment.dataplane",
            "module.provider-qna-connector.kubernetes_service.controlplane-service",
            "module.provider-qna-connector.kubernetes_service.dataplane-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-qna-connector",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "controlplane-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-qna-controlplane",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-qna-controlplane",
                "namespace": "mvd",
                "resource_version": "1755",
                "uid": "f7618032-f40a-479b-b341-d81dfaa7a9f2"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.104.119.31",
                "cluster_ips": [
                  "10.104.119.31"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "health",
                    "node_port": 30472,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  },
                  {
                    "app_protocol": "",
                    "name": "management",
                    "node_port": 30917,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "8081"
                  },
                  {
                    "app_protocol": "",
                    "name": "catalog",
                    "node_port": 30605,
                    "port": 8084,
                    "protocol": "TCP",
                    "target_port": "8084"
                  },
                  {
                    "app_protocol": "",
                    "name": "protocol",
                    "node_port": 31752,
                    "port": 8082,
                    "protocol": "TCP",
                    "target_port": "8082"
                  },
                  {
                    "app_protocol": "",
                    "name": "debug",
                    "node_port": 30520,
                    "port": 1044,
                    "protocol": "TCP",
                    "target_port": "1044"
                  },
                  {
                    "app_protocol": "",
                    "name": "control",
                    "node_port": 31924,
                    "port": 8083,
                    "protocol": "TCP",
                    "target_port": "8083"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "provider-qna-controlplane"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-qna-connector.kubernetes_config_map.connector-config",
            "module.provider-qna-connector.kubernetes_config_map.participants-map",
            "module.provider-qna-connector.kubernetes_deployment.controlplane",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-qna-connector",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "dataplane-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-qna-dataplane",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-qna-dataplane",
                "namespace": "mvd",
                "resource_version": "1806",
                "uid": "d6bec10f-14ef-4804-9e8a-6d9091bdb158"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.105.98.18",
                "cluster_ips": [
                  "10.105.98.18"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "control",
                    "node_port": 31767,
                    "port": 8083,
                    "protocol": "TCP",
                    "target_port": "8083"
                  },
                  {
                    "app_protocol": "",
                    "name": "public",
                    "node_port": 30563,
                    "port": 11002,
                    "protocol": "TCP",
                    "target_port": "11002"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "provider-qna-dataplane"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-qna-connector.kubernetes_config_map.connector-config",
            "module.provider-qna-connector.kubernetes_config_map.dataplane-config",
            "module.provider-qna-connector.kubernetes_config_map.participants-map",
            "module.provider-qna-connector.kubernetes_deployment.controlplane",
            "module.provider-qna-connector.kubernetes_deployment.dataplane",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-sts.kubernetes_service.sts-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-sts",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "sts-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "EDC_API_ACCOUNTS_KEY": "password",
              "EDC_DATASOURCE_DEFAULT_PASSWORD": "identity",
              "EDC_DATASOURCE_DEFAULT_URL": "jdbc:postgresql://provider-postgres-service:5432/identity",
              "EDC_DATASOURCE_DEFAULT_USER": "identity",
              "EDC_SQL_SCHEMA_AUTOCREATE": "true",
              "EDC_VAULT_HASHICORP_TOKEN": "root",
              "EDC_VAULT_HASHICORP_URL": "http://provider-vault:8200",
              "JAVA_TOOL_OPTIONS": "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1046",
              "WEB_HTTP_ACCOUNTS_PATH": "/api",
              "WEB_HTTP_ACCOUNTS_PORT": "8081",
              "WEB_HTTP_PATH": "/internal",
              "WEB_HTTP_PORT": "8080",
              "WEB_HTTP_STS_PATH": "/api/sts",
              "WEB_HTTP_STS_PORT": "8082"
            },
            "id": "mvd/provider-sts-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-sts-config",
                "namespace": "mvd",
                "resource_version": "738",
                "uid": "2116055b-8e7a-4719-b104-efc988650199"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-sts",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "sts",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-sts",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "provider-sts"
                },
                "name": "provider-sts",
                "namespace": "mvd",
                "resource_version": "897",
                "uid": "7394be73-858d-41cf-8893-2bef9acb2748"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "provider-sts"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "provider-sts"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "provider-sts-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "marinho165/sts:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/internal/check/liveness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "sts",
                            "port": [
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "accounts-port",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8082,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "sts-port",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/internal/check/readiness",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 10,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/internal/check/startup",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-sts",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "sts-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "mvd/provider-sts-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "provider-sts-service",
                "namespace": "mvd",
                "resource_version": "910",
                "uid": "ea3d5907-c280-4cd3-843e-57282ab4306a"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.109.121.219",
                "cluster_ips": [
                  "10.109.121.219"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "accounts-port",
                    "node_port": 0,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "8081"
                  },
                  {
                    "app_protocol": "",
                    "name": "sts-port",
                    "node_port": 0,
                    "port": 8082,
                    "protocol": "TCP",
                    "target_port": "8082"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "App": "provider-sts"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.postgres-initdb-config-cs",
            "kubernetes_config_map.postgres-initdb-config-ih",
            "kubernetes_config_map.postgres-initdb-config-pm",
            "kubernetes_config_map.postgres-initdb-config-pqna",
            "kubernetes_namespace.ns",
            "module.provider-postgres.kubernetes_config_map.postgres-env",
            "module.provider-postgres.kubernetes_deployment.postgres",
            "module.provider-postgres.kubernetes_service.pg-service",
            "module.provider-sts.kubernetes_config_map.sts-config",
            "module.provider-sts.kubernetes_deployment.sts",
            "module.provider-vault.helm_release.vault",
            "module.provider-vault.tls_private_key.private_signing_key"
          ]
        }
      ]
    },
    {
      "module": "module.provider-vault",
      "mode": "managed",
      "type": "helm_release",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "vault",
            "cleanup_on_fail": true,
            "create_namespace": false,
            "dependency_update": true,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": true,
            "id": "provider-vault",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.18.1",
                "chart": "vault",
                "first_deployed": 1736506992,
                "last_deployed": 1736506992,
                "name": "provider-vault",
                "namespace": "mvd",
                "notes": "\nThank you for installing HashiCorp Vault!\n\nNow that you have deployed Vault, you should look over the docs on using\nVault with Kubernetes available here:\n\nhttps://developer.hashicorp.com/vault/docs\n\n\nYour release is named provider-vault. To learn more about the release, try:\n\n  $ helm status provider-vault\n  $ helm get manifest provider-vault\n\n",
                "revision": 1,
                "values": "{\"hashicorp\":{\"healthCheck\":{\"enabled\":true,\"standbyOk\":true},\"paths\":{\"secret\":\"/v1/secret\"},\"timeout\":30,\"token\":\"root\"},\"injector\":{\"enabled\":false},\"server\":{\"dev\":{\"devRootToken\":\"root\",\"enabled\":true},\"postStart\":null}}",
                "version": "0.29.1"
              }
            ],
            "name": "provider-vault",
            "namespace": "mvd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": true,
            "repository": "https://helm.releases.hashicorp.com",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": true,
            "set": [
              {
                "name": "hashicorp.token",
                "type": "",
                "value": "root"
              },
              {
                "name": "injector.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "server.dev.devRootToken",
                "type": "",
                "value": "root"
              },
              {
                "name": "server.dev.enabled",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "#\n#  Copyright (c) 2024 Metaform Systems, Inc.\n#\n#  This program and the accompanying materials are made available under the\n#  terms of the Apache License, Version 2.0 which is available at\n#  https://www.apache.org/licenses/LICENSE-2.0\n#\n#  SPDX-License-Identifier: Apache-2.0\n#\n#  Contributors:\n#       Metaform Systems, Inc. - initial API and implementation\n#\n\nserver:\n  postStart:\nhashicorp:\n  timeout: 30\n  healthCheck:\n    enabled: true\n    standbyOk: true\n  paths:\n    secret: /v1/secret\n"
            ],
            "verify": false,
            "version": "0.29.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.ns"
          ]
        }
      ]
    },
    {
      "module": "module.provider-vault",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "private_signing_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "ECDSA",
            "ecdsa_curve": "P256",
            "id": "bd3843583e3881d2b66b6240f7afb9ddedc39744",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAaAAAABNl\nY2RzYS1zaGEyLW5pc3RwMjU2AAAACG5pc3RwMjU2AAAAQQS74GOxTgVqFDrJbnIt\n1UuLtOhEhIZQ04U2xEwXBg2mmr4vH2xvAp0oYEn2gw0euZkrY0m/TvoriEyX4LZS\nxYTfAAAAmCKK2dciitnXAAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAy\nNTYAAABBBLvgY7FOBWoUOsluci3VS4u06ESEhlDThTbETBcGDaaavi8fbG8CnShg\nSfaDDR65mStjSb9O+iuITJfgtlLFhN8AAAAgTO/TyMzGaFT4pbfbAXFUN2HaDIjy\nFgQtagALZSwJbVMAAAAA\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIEzv08jMxmhU+KW32wFxVDdh2gyI8hYELWoAC2UsCW1ToAoGCCqGSM49\nAwEHoUQDQgAEu+BjsU4FahQ6yW5yLdVLi7ToRISGUNOFNsRMFwYNppq+Lx9sbwKd\nKGBJ9oMNHrmZK2NJv076K4hMl+C2UsWE3w==\n-----END EC PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgTO/TyMzGaFT4pbfb\nAXFUN2HaDIjyFgQtagALZSwJbVOhRANCAAS74GOxTgVqFDrJbnIt1UuLtOhEhIZQ\n04U2xEwXBg2mmr4vH2xvAp0oYEn2gw0euZkrY0m/TvoriEyX4LZSxYTf\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "eb:5c:01:1b:32:2e:25:5d:ee:ad:b7:5b:8f:77:3b:47",
            "public_key_fingerprint_sha256": "SHA256:SxvDz0jsXFk1xojuOWFnrF041+xvzfGIEyD2o9oWJ3o",
            "public_key_openssh": "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLvgY7FOBWoUOsluci3VS4u06ESEhlDThTbETBcGDaaavi8fbG8CnShgSfaDDR65mStjSb9O+iuITJfgtlLFhN8=\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEu+BjsU4FahQ6yW5yLdVLi7ToRISG\nUNOFNsRMFwYNppq+Lx9sbwKdKGBJ9oMNHrmZK2NJv076K4hMl+C2UsWE3w==\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ]
          ]
        }
      ]
    }
  ],
  "check_results": null
}
